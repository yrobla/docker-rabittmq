#!/bin/bash

# check if we have marathon endpoint
echo "Starting cluster"
if [ ! -z "$MARATHON_ENDPOINT" ]; then
    # curl the url and check if there is a host
    echo "Discovering configuration from $MARATHON_ENDPOINT"
    HOSTS=`curl -X GET -H "Content-Type: application/json" http://$MARATHON_ENDPOINT/v2/apps/yroblarabbitmq | grep -Po '"host":".*?[^"]"' | sed 's/^.*://' | sed 's/^"\(.*\)"$/\1/'`
    for entry in $HOSTS
    do
        echo "entry is"
        echo $entry
        echo "host is"
        echo $HOST
        if [ "$entry" != "$HOST" ]; then
            CLUSTER=$entry
        fi
    done
fi
echo "Found cluster [$CLUSTER]"
echo "Starting RabbitMQ"
/usr/lib/rabbitmq/bin/rabbitmq-server &
sleep 10
if [[ -z "$CLUSTER" ]]; then
echo "Running as master"
else
echo "Joining cluster at $CLUSTER"
rabbitmqctl stop_app
echo "After stop"
rabbitmqctl reset
echo "After reset"
rabbitmqctl join_cluster $CLUSTER
echo "After join"
rabbitmqctl start_app
echo "After start app"
fi
# Infinite sleep loop to keep docker backgrounding happy
while true; do
sleep 1
done
